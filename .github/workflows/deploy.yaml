name: Build & Deploy (test)
on:
  push:
    branches:
      - 'main'
    paths:
    - '.github/**'

env:
  NAMESPACE: shiny
  PROJECT: nivatest-1
  ENVIRONMENT: test
  ZONE: europe-west1
  IMAGE_NAME: lake-liming
  WORKDIR: ./

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          token_format: access_token
          workload_identity_provider: "${{secrets.WORKLOAD_IDENTITY_PROVIDER}}"
          service_account: "${{secrets.WORKLOAD_IDENTITY_SA}}"
      - name: Login to Artifact Registry
        uses: "docker/login-action@v2"
        with:
          registry: "europe-west1-docker.pkg.dev"
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
      - name: Setup kustomize
        shell: bash
        run: |
          mkdir -p ~/.local/bin
          cd ~/.local/bin
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          cd -
      - name: Build lake-liming image
        uses: ./.github/actions/build
        with:
          image_name: ${{ env.IMAGE_NAME }}
          context: ${{ env.WORKDIR }}
          kustomize_dir: ${{ env.WORKDIR }}/deployment/base
      # The build actions uses kustomize to store the new image tag in the base
      # if a new image is build. This is then commited by the action.
      - name: Bump images
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Bump image tags
          file_pattern: ${{ env.WORKDIR }}/deployment/base/kustomization.yaml
          skip_checkout: true
  deploy:

    # We need access to the kubernetes cluster when deploying, so we
    # are using a runner that is deployed on the cluster.
    runs-on: ["self-hosted", "nivatest-1"]

    needs:
      - build

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          token_format: access_token
          workload_identity_provider: "${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.WORKLOAD_IDENTITY_SA }}"

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: ${{ env.PROJECT }}-cluster
          location: ${{ env.ZONE }}
          project_id: ${{ env.PROJECT }}
          use_internal_ip: True

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install

      - name: Deploy
        run: |-
          kubectl config set-context --current --namespace=${{ env.NAMESPACE }}
          kubectl apply -k ${{ env.WORKDIR }}/deployment/${{ env.ENVIRONMENT }}
